{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { API_URL } from '../env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatbotApiService {\n  constructor(http) {\n    this.http = http;\n    this.url = `${API_URL}/message`;\n  }\n  static _handleError(err) {\n    return throwError(err.message || 'Error: Unable to complete request.');\n  }\n  // GET chatbot\n  getChatbot() {\n    return this.http.get(`${API_URL}/`).pipe(catchError(ChatbotApiService._handleError));\n  }\n  send(chatbot) {\n    console.log(\"=> \", chatbot);\n    return this.http.post(this.url, chatbot);\n  }\n  saveChatbot(chatbot) {\n    return this.http.post(this.url, chatbot);\n  }\n}\nChatbotApiService.ɵfac = function ChatbotApiService_Factory(t) {\n  return new (t || ChatbotApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nChatbotApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ChatbotApiService,\n  factory: ChatbotApiService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAAoBA,UAAU,QAAO,MAAM;AAC3C,SAAQC,UAAU,QAAc,gBAAgB;AAChD,SAAQC,OAAO,QAAO,QAAQ;;;AAI9B,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,GAAG,GAAG,GAAGJ,OAAO,UAAU;EACjC;EAEQ,OAAOK,YAAY,CAACC,GAA4B;IACtD,OAAOR,UAAU,CAACQ,GAAG,CAACC,OAAO,IAAI,oCAAoC,CAAC;EACxE;EAEA;EACAC,UAAU;IACR,OAAO,IAAI,CAACL,IAAI,CACbM,GAAG,CAAU,GAAGT,OAAO,GAAG,CAAC,CAACU,IAAI,CACjCX,UAAU,CAACE,iBAAiB,CAACI,YAAY,CAAC,CAAC;EAC/C;EAEOM,IAAI,CAACC,OAAgB;IAC1BC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,OAAO,CAAC;IAC1B,OAAO,IAAI,CAACT,IAAI,CAACY,IAAI,CAAC,IAAI,CAACX,GAAG,EAAEQ,OAAO,CAAC;EAC1C;EAEAI,WAAW,CAACJ,OAAgB;IAC1B,OAAO,IAAI,CAACT,IAAI,CACbY,IAAI,CAAC,IAAI,CAACX,GAAG,EAAEQ,OAAO,CAAC;EAC5B;;AA1BWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAgB,SAAjBhB,iBAAiB;AAAA","names":["throwError","catchError","API_URL","ChatbotApiService","constructor","http","url","_handleError","err","message","getChatbot","get","pipe","send","chatbot","console","log","post","saveChatbot","factory"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/chatbot/chatbot-api.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {API_URL} from '../env';\nimport {Chatbot} from './chatbot.model';\n\n@Injectable()\nexport class ChatbotApiService {\n  private url: string;\n  \n  constructor(private http: HttpClient) {\n    this.url = `${API_URL}/message`;\n  }\n\n  private static _handleError(err: HttpErrorResponse | any) {\n    return throwError(err.message || 'Error: Unable to complete request.');\n  }\n\n  // GET chatbot\n  getChatbot(): Observable<Chatbot> {\n    return this.http\n      .get<Chatbot>(`${API_URL}/`).pipe(\n      catchError(ChatbotApiService._handleError));\n  }\n\n  public send(chatbot: Chatbot): Observable<any> {\n    console.log(\"=> \",chatbot);\n    return this.http.post(this.url, chatbot);\n  }\n\n  saveChatbot(chatbot: Chatbot): Observable<any> {\n    return this.http\n      .post(this.url, chatbot);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}