{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbot-api.service\";\nfunction ChatbotComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r1, \" \");\n  }\n}\nexport class Chat {\n  constructor(message, isMe, type) {}\n}\nexport class ChatbotComponent {\n  constructor(chatbotApi) {\n    this.chatbotApi = chatbotApi;\n    this.chats = [];\n  }\n  ngOnInit() {\n    // Display Welcome message in the Smart Agent Portal\n    let userMessage_default = {\n      message: '',\n      isMe: false,\n      type: ''\n    };\n    let chatbotMessage_default = {\n      message: [{\n        \"_type\": \"welcome\",\n        \"answer\": \"Welcome to our search platform. I’m YelpBot. You can ask me anything related to restaurants and different food types ...\"\n      }],\n      isMe: false,\n      type: 'bot'\n    };\n    setTimeout(() => {\n      this.chats = [userMessage_default, chatbotMessage_default];\n    }, 1500);\n    this.chatbotSubs = this.chatbotApi.getChatbot().subscribe(res => {\n      this.chatbot = res;\n      console.log(\"--------\");\n      console.log(this.chatbot);\n    }, console.error);\n  }\n  ngOnDestroy() {\n    this.chatbotSubs.unsubscribe();\n  }\n}\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) {\n  return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ChatbotApiService));\n};\nChatbotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatbotComponent,\n  selectors: [[\"chatbot\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function ChatbotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n      i0.ɵɵtemplate(2, ChatbotComponent_li_2_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatbot.messages);\n    }\n  },\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-left: 18px;\\n  margin-right: 18px;\\n}\\n.caption[_ngcontent-%COMP%] {\\n  padding: 30px;\\n  text-align: center;\\n  color: #6c46bd;\\n}\\n#thumbnail[_ngcontent-%COMP%] {\\n  height: 130px;\\n  width: 130px;\\n  object-fit: cover;\\n  border-radius: 50%;\\n}\\n.card[_ngcontent-%COMP%] {\\n  background: white;\\n  height: 60%;\\n  width: 500px;\\n  height: 500px;\\n  display: flex;\\n  flex-direction: column;\\n  filter: drop-shadow(0px 0px 5px black);\\n  border-radius: 15px;\\n  padding: 16px;\\n}\\n.chat-list[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px;\\n  overflow-y: scroll;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 8px 0px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #6c46bd;\\n  margin: auto 8px;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #avatar[_ngcontent-%COMP%] {\\n  height: 44px;\\n  width: 44px;\\n  object-fit: cover;\\n  border-radius: 50%;\\n  z-index: 99;\\n  border: 3px solid white;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%] {\\n  margin-right: auto;\\n  margin-left: 8px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-left: -10px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  margin-left: auto;\\n  flex-direction: row-reverse;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-right: -10px;\\n}\\n.chat-footer[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 16px;\\n  background: #6c46bd;\\n  border-radius: 6px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #chat-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin: 0 8px;\\n  border: 0px;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  padding: 16px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #send-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  background: white;\\n  padding: 0 8px;\\n}\\n#clear-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\\n  color: white;\\n  padding: 10px;\\n  background: #6c46bd;\\n  border-radius: 6px;\\n}\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0MsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBRkQ7QUFLQTtFQUNDLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFIRDtBQU1BO0VBQ0MsYUFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBSkQ7QUFPQTtFQUNDLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esc0NBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUFMRDtBQVNBO0VBQ0MsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUFQRDtBQUVBO0VBU0csY0FBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFSSDtBQUpBO0VBZUssbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBUkw7QUFiQTtFQXlCSyxZQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7QUFUTDtBQXJCQTtFQW1DRyxrQkFBQTtFQUNBLGdCQUFBO0FBWEg7QUF6QkE7RUF1Q0ssa0JBQUE7QUFYTDtBQTVCQTtFQTRDRyxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7QUFiSDtBQWpDQTtFQWlESyxtQkFBQTtBQWJMO0FBa0JBO0VBQ0MsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFoQkQ7QUFXQTtFQVFHLE9BQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLHVDQUFBO0VBQ0EsYUFBQTtBQWhCSDtBQUlBO0VBZ0JHLFNBQUE7RUFDQSx1Q0FBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQWpCSDtBQXNCQTtFQUNDLFNBQUE7RUFDQSxzQ0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQXBCRDtBQXVCQTtFQUNDLGFBQUE7QUFyQkQiLCJzb3VyY2VzQ29udGVudCI6WyJAYmFja2dyb3VuZDogd2hpdGU7XG5AcHJpbWFyeTogIzZjNDZiZDtcblxuLmNvbnRhaW5lciB7XG4gZGlzcGxheTogZmxleDtcbiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiBhbGlnbi1pdGVtczogY2VudGVyO1xuIG1hcmdpbi1sZWZ0OiAxOHB4O1xuIG1hcmdpbi1yaWdodDogMThweDtcbn1cblxuLmNhcHRpb24ge1xuIHBhZGRpbmc6IDMwcHg7XG4gdGV4dC1hbGlnbjogY2VudGVyO1xuIGNvbG9yOiBAcHJpbWFyeTtcbn1cblxuI3RodW1ibmFpbCB7XG4gaGVpZ2h0OiAxMzBweDtcbiB3aWR0aDogMTMwcHg7XG4gb2JqZWN0LWZpdDogY292ZXI7XG4gYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uY2FyZCB7XG4gYmFja2dyb3VuZDogQGJhY2tncm91bmQ7XG4gaGVpZ2h0OiA2MCU7XG4gd2lkdGg6IDUwMHB4O1xuIGhlaWdodDogNTAwcHg7XG4gZGlzcGxheTogZmxleDtcbiBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDBweCA1cHggYmxhY2spO1xuIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gcGFkZGluZzogMTZweDtcblxufVxuXG4uY2hhdC1saXN0IHtcbiBtYXJnaW4tdG9wOiBhdXRvO1xuIGRpc3BsYXk6IGZsZXg7XG4gZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiBwYWRkaW5nOiAxNnB4O1xuIG92ZXJmbG93LXk6IHNjcm9sbDtcblxuXG4gLmNoYXQtaXRlbSB7XG4gICBtYXgtd2lkdGg6IDgwJTtcbiAgIG1hcmdpbjogOHB4IDBweDtcbiAgIGRpc3BsYXk6IGZsZXg7XG4gICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gICAjbWVzc2FnZS1ib2R5IHtcbiAgICAgYmFja2dyb3VuZDogQHByaW1hcnk7XG4gICAgIG1hcmdpbjogYXV0byA4cHg7XG4gICAgIHBhZGRpbmc6IDEycHggMjRweDtcbiAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgY29sb3I6IHdoaXRlO1xuICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgfVxuXG4gICAjYXZhdGFyIHtcbiAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICB3aWR0aDogNDRweDtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgei1pbmRleDogOTk7XG4gICAgIGJvcmRlcjogM3B4IHNvbGlkIEBiYWNrZ3JvdW5kO1xuICAgfVxuIH1cblxuIC5sZWZ0IHtcbiAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgIG1hcmdpbi1sZWZ0OiA4cHg7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gICB9XG4gfVxuXG4gLnJpZ2h0IHtcbiAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICAgfVxuIH1cbn1cblxuLmNoYXQtZm9vdGVyIHtcbiBkaXNwbGF5OiBmbGV4O1xuIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gcGFkZGluZzogMTZweDtcbiBiYWNrZ3JvdW5kOiBAcHJpbWFyeTtcbiBib3JkZXItcmFkaXVzOiA2cHg7XG5cbiAjY2hhdC10ZXh0YXJlYSB7XG4gICBmbGV4OiAxO1xuICAgbWFyZ2luOiAwIDhweDtcbiAgIGJvcmRlcjogMHB4O1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgcGFkZGluZzogMTZweDtcbiB9XG5cbiAjc2VuZC1idXR0b24ge1xuICAgYm9yZGVyOiAwO1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICBwYWRkaW5nOiAwIDhweDtcbiB9XG5cbn1cblxuI2NsZWFyLWJ1dHRvbiB7XG4gYm9yZGVyOiAwO1xuIGJveC1zaGFkb3c6IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuIGNvbG9yOiB3aGl0ZTtcbiBwYWRkaW5nOiAxMHB4O1xuIGJhY2tncm91bmQ6IEBwcmltYXJ5O1xuIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cblxuOjotd2Via2l0LXNjcm9sbGJhciB7XG4gZGlzcGxheTogbm9uZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;IAkBYA,0BAA6C;IACzCA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,2CACJ;;;AAfZ,OAAM,MAAOC,IAAI;EAKfC,YAAYC,OAAe,EAAEC,IAAa,EAAEC,IAAY,GAAI;;AAgB9D,OAAM,MAAOC,gBAAgB;EAKzBJ,YAAoBK,UAA6B;IAA7B,eAAU,GAAVA,UAAU;IAF9B,UAAK,GAAW,EAAE;EAGlB;EAEAC,QAAQ;IACN;IACA,IAAIC,mBAAmB,GAAG;MAAEN,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAE,CAAE;IAChE,IAAIK,sBAAsB,GAAG;MAC3BP,OAAO,EACL,CAAC;QACC,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE;OACX,CAAC;MAEJC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;KACP;IAEDM,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,KAAK,GAAG,CAACH,mBAAmB,EAAEC,sBAAsB,CAAC;IAC5D,CAAC,EAAE,IAAI,CAAC;IAER,IAAI,CAACG,WAAW,GAAG,IAAI,CAACN,UAAU,CAC/BO,UAAU,EAAE,CACZC,SAAS,CAACC,GAAG,IAAG;MACb,IAAI,CAACC,OAAO,GAAGD,GAAG;MAClBE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;IAC3B,CAAC,EACDC,OAAO,CAACE,KAAK,CAChB;EACH;EAEAC,WAAW;IACT,IAAI,CAACR,WAAW,CAACS,WAAW,EAAE;EAChC;;AAvCShB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAVzB3B,2BAAK;MAEGA,+DAEK;MACTA,iBAAK;;;MAHuBA,eAAmB;MAAnBA,8CAAmB","names":["i0","Chat","constructor","message","isMe","type","ChatbotComponent","chatbotApi","ngOnInit","userMessage_default","chatbotMessage_default","setTimeout","chats","chatbotSubs","getChatbot","subscribe","res","chatbot","console","log","error","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/chatbot/chatbot.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ChatbotApiService} from './chatbot-api.service';\nimport {Chatbot} from './chatbot.model';\n\nexport class Chat {\n  message: any;\n  isMe: boolean;\n  type: string;\n\n  constructor(message: string, isMe: boolean, type: string) { }\n}\n\n@Component({\n  selector: 'chatbot',\n  template: `\n    <div>\n        <ul>\n            <li *ngFor=\"let message of chatbot.messages\">\n                {{message}}\n            </li>\n        </ul>\n    </div>\n  `,\n  styleUrls: ['../app.component.less']\n})\nexport class ChatbotComponent implements OnInit, OnDestroy {\n    chatbotSubs: Subscription;\n    chatbot: Chatbot;\n    chats: Chat[] = [];\n  \n    constructor(private chatbotApi: ChatbotApiService) {\n    }\n  \n    ngOnInit() {\n      // Display Welcome message in the Smart Agent Portal\n      let userMessage_default = { message: '', isMe: false, type: '' }\n      let chatbotMessage_default = {\n        message:\n          [{\n            \"_type\": \"welcome\",\n            \"answer\": \"Welcome to our search platform. I’m YelpBot. You can ask me anything related to restaurants and different food types ...\"\n          }],\n\n        isMe: false,\n        type: 'bot'\n      }\n\n      setTimeout(() => {\n        this.chats = [userMessage_default, chatbotMessage_default]\n      }, 1500);\n\n      this.chatbotSubs = this.chatbotApi\n        .getChatbot()\n        .subscribe(res => {\n            this.chatbot = res;\n            console.log(\"--------\");\n            console.log(this.chatbot);\n          },\n          console.error\n      );\n    }\n  \n    ngOnDestroy() {\n      this.chatbotSubs.unsubscribe();\n    }\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}