{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbot-api.service\";\nimport * as i2 from \"@angular/common\";\nfunction ChatbotComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r1, \" \");\n  }\n}\nexport class Chat {\n  constructor(message, isMe, type) {}\n}\nexport class ChatbotComponent {\n  constructor(chatbotApi) {\n    this.chatbotApi = chatbotApi;\n    this.chats = [];\n  }\n  ngOnInit() {\n    // Display Welcome message in the Smart Agent Portal\n    let userMessage_default = {\n      message: '',\n      isMe: false,\n      type: ''\n    };\n    let chatbotMessage_default = {\n      message: [{\n        \"_type\": \"welcome\",\n        \"answer\": \"Welcome to our search platform. I’m YelpBot. You can ask me anything related to restaurants and different food types ...\"\n      }],\n      isMe: false,\n      type: 'bot'\n    };\n    setTimeout(() => {\n      this.chats = [userMessage_default, chatbotMessage_default];\n    }, 1500);\n    this.chatbotSubs = this.chatbotApi.getChatbot().subscribe(res => {\n      this.chatbot = res;\n      console.log(\"--------\");\n      console.log(this.chatbot);\n    }, console.error);\n  }\n  ngOnDestroy() {\n    this.chatbotSubs.unsubscribe();\n  }\n}\nChatbotComponent.ɵfac = function ChatbotComponent_Factory(t) {\n  return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ChatbotApiService));\n};\nChatbotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatbotComponent,\n  selectors: [[\"chatbot\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function ChatbotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n      i0.ɵɵtemplate(2, ChatbotComponent_li_2_Template, 2, 1, \"li\", 0);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatbot.messages);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAkBYA,0BAA6C;IACzCA,YACJ;IAAAA,iBAAK;;;;IADDA,eACJ;IADIA,2CACJ;;;AAfZ,OAAM,MAAOC,IAAI;EAKfC,YAAYC,OAAe,EAAEC,IAAa,EAAEC,IAAY,GAAI;;AAgB9D,OAAM,MAAOC,gBAAgB;EAKzBJ,YAAoBK,UAA6B;IAA7B,eAAU,GAAVA,UAAU;IAF9B,UAAK,GAAW,EAAE;EAGlB;EAEAC,QAAQ;IACN;IACA,IAAIC,mBAAmB,GAAG;MAAEN,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,IAAI,EAAE;IAAE,CAAE;IAChE,IAAIK,sBAAsB,GAAG;MAC3BP,OAAO,EACL,CAAC;QACC,OAAO,EAAE,SAAS;QAClB,QAAQ,EAAE;OACX,CAAC;MAEJC,IAAI,EAAE,KAAK;MACXC,IAAI,EAAE;KACP;IAEDM,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,KAAK,GAAG,CAACH,mBAAmB,EAAEC,sBAAsB,CAAC;IAC5D,CAAC,EAAE,IAAI,CAAC;IAER,IAAI,CAACG,WAAW,GAAG,IAAI,CAACN,UAAU,CAC/BO,UAAU,EAAE,CACZC,SAAS,CAACC,GAAG,IAAG;MACb,IAAI,CAACC,OAAO,GAAGD,GAAG;MAClBE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;IAC3B,CAAC,EACDC,OAAO,CAACE,KAAK,CAChB;EACH;EAEAC,WAAW;IACT,IAAI,CAACR,WAAW,CAACS,WAAW,EAAE;EAChC;;AAvCShB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAVzB3B,2BAAK;MAEGA,+DAEK;MACTA,iBAAK;;;MAHuBA,eAAmB;MAAnBA,8CAAmB","names":["i0","Chat","constructor","message","isMe","type","ChatbotComponent","chatbotApi","ngOnInit","userMessage_default","chatbotMessage_default","setTimeout","chats","chatbotSubs","getChatbot","subscribe","res","chatbot","console","log","error","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/chatbot/chatbot.component.ts"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {ChatbotApiService} from './chatbot-api.service';\nimport {Chatbot} from './chatbot.model';\n\nexport class Chat {\n  message: any;\n  isMe: boolean;\n  type: string;\n\n  constructor(message: string, isMe: boolean, type: string) { }\n}\n\n@Component({\n  selector: 'chatbot',\n  template: `\n    <div>\n        <ul>\n            <li *ngFor=\"let message of chatbot.messages\">\n                {{message}}\n            </li>\n        </ul>\n    </div>\n  `,\n  styleUrls: ['../app.component.less']\n})\nexport class ChatbotComponent implements OnInit, OnDestroy {\n    chatbotSubs: Subscription;\n    chatbot: Chatbot;\n    chats: Chat[] = [];\n  \n    constructor(private chatbotApi: ChatbotApiService) {\n    }\n  \n    ngOnInit() {\n      // Display Welcome message in the Smart Agent Portal\n      let userMessage_default = { message: '', isMe: false, type: '' }\n      let chatbotMessage_default = {\n        message:\n          [{\n            \"_type\": \"welcome\",\n            \"answer\": \"Welcome to our search platform. I’m YelpBot. You can ask me anything related to restaurants and different food types ...\"\n          }],\n\n        isMe: false,\n        type: 'bot'\n      }\n\n      setTimeout(() => {\n        this.chats = [userMessage_default, chatbotMessage_default]\n      }, 1500);\n\n      this.chatbotSubs = this.chatbotApi\n        .getChatbot()\n        .subscribe(res => {\n            this.chatbot = res;\n            console.log(\"--------\");\n            console.log(this.chatbot);\n          },\n          console.error\n      );\n    }\n  \n    ngOnDestroy() {\n      this.chatbotSubs.unsubscribe();\n    }\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}