{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbot/chatbot-api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"chatListContainer\"];\nconst _c1 = function (a0, a1) {\n  return {\n    \"right\": a0,\n    \"left\": a1\n  };\n};\nfunction AppComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8)(2, \"p\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c1, (item_r3 == null ? null : item_r3.user == null ? null : item_r3.user.id) == ctx_r1.human.id, (item_r3 == null ? null : item_r3.user == null ? null : item_r3.user.id) != ctx_r1.human.id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3 == null ? null : item_r3.message);\n  }\n}\nfunction AppComponent_ng_container_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_5_div_1_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const quick_reply_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.replaceInput(quick_reply_r6));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quick_reply_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quick_reply_r6);\n  }\n}\nfunction AppComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_5_div_1_Template, 3, 1, \"div\", 10);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r4 == null ? null : item_r4.quick_replies);\n  }\n}\nexport class AppComponent {\n  constructor(chatbotApi, router) {\n    this.chatbotApi = chatbotApi;\n    this.router = router;\n    this.title = 'chat-ui';\n    this.message = \"\";\n    this.chatbot = {\n      messages: [{\n        \"df_type\": \"\",\n        \"text\": \"\"\n      }]\n    };\n    this.chatInputMessage = \"\";\n    this.human = {\n      id: 1\n    };\n    this.bot = {\n      id: 2\n    };\n    this.chatMessages = [{\n      user: this.bot,\n      message: \"Hello I'm MECC or Miscellaneous Educational Cybersecurity Chatbot\\n\",\n      quick_replies: [],\n      type: \"text\"\n    }, {\n      user: this.bot,\n      message: \"A chatbot specialized in cybersecurity education and sensibilization.\",\n      quick_replies: [],\n      type: \"text\"\n    }];\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  saveChatbot() {\n    this.chatbot.messages = [{\n      \"df_type\": \"text\",\n      \"text\": this.message\n    }];\n    this.chatMessages.push({\n      message: this.message,\n      quick_replies: [],\n      user: this.human,\n      type: \"text\"\n    });\n    this.chatbotApi.send(this.chatbot).subscribe(data => {\n      console.log(\"-----------> \", data.messages);\n      this.receive(data.messages);\n    });\n    this.chatbotApi.saveChatbot(this.chatbot).subscribe(() => this.router.navigate(['/']), error => alert(error.message));\n    this.chatInputMessage = \"\";\n    this.scrollToBottom();\n  }\n  replaceInput(quick_reply) {\n    console.log(\"REPLY : \", quick_reply);\n    this.chatbot.messages = [{\n      \"df_type\": \"text\",\n      \"text\": quick_reply\n    }];\n    this.chatMessages.push({\n      message: quick_reply,\n      quick_replies: [],\n      user: this.human,\n      type: \"text\"\n    });\n    this.chatbotApi.send(this.chatbot).subscribe(data => {\n      console.log(\"-----------> \", data.messages);\n      this.receive(data.messages);\n    });\n    this.chatbotApi.saveChatbot(this.chatbot).subscribe(() => this.router.navigate(['/']), error => alert(error.message));\n    this.chatInputMessage = \"\";\n    this.scrollToBottom();\n  }\n  receive(messages) {\n    for (let i = 0; i < messages.length; i++) {\n      messages[i] = messages[i].replace(/'/g, '\"');\n      var dict_message = JSON.parse(messages[i]);\n      if (dict_message.text != \"\") {\n        console.log(\"---> ..\", dict_message);\n        if (dict_message['df_type'] == 'text') {\n          this.chatMessages.push({\n            message: dict_message['text'],\n            quick_replies: [],\n            user: this.bot,\n            type: dict_message['df_type']\n          });\n        } else if (dict_message['df_type'] == 'quick_replies') {\n          this.chatMessages.push({\n            message: dict_message['text'],\n            quick_replies: dict_message['quick_replies'],\n            user: this.bot,\n            type: dict_message['df_type']\n          });\n        }\n      }\n    }\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    const maxScroll = this.list?.nativeElement.scrollHeight;\n    this.list?.nativeElement.scrollTo({\n      top: maxScroll,\n      behavior: 'smooth'\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ChatbotApiService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  decls: 10,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\"], [1, \"chat-list\"], [\"chatListContainer\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chat-footer\"], [\"matInput\", \"\", \"id\", \"chat-textarea\", \"required\", \"\", 3, \"ngModel\", \"keydown.enter\", \"ngModelChange\"], [\"id\", \"send-button\", 3, \"disabled\", \"click\", \"keydown.enter\"], [1, \"chat-item\", 3, \"ngClass\"], [\"id\", \"message-body\"], [\"class\", \"quick-replies-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"quick-replies-item\"], [\"onclick\", \"clearQuickReply()\", 1, \"quick-replies-body\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2, 3);\n      i0.ɵɵtemplate(4, AppComponent_ng_container_4_Template, 4, 5, \"ng-container\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, AppComponent_ng_container_5_Template, 2, 1, \"ng-container\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6);\n      i0.ɵɵlistener(\"keydown.enter\", function AppComponent_Template_input_keydown_enter_7_listener() {\n        return ctx.saveChatbot();\n      })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n        return ctx.saveChatbot();\n      })(\"keydown.enter\", function AppComponent_Template_button_keydown_enter_8_listener() {\n        return ctx.saveChatbot();\n      });\n      i0.ɵɵtext(9, \" send \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.message);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.message === \"\");\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.RequiredValidator, i4.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-left: 18px;\\n  margin-right: 18px;\\n  margin-top: 100px;\\n}\\n.card[_ngcontent-%COMP%] {\\n  background: #bbb;\\n  height: 60%;\\n  width: 500px;\\n  height: 500px;\\n  display: flex;\\n  flex-direction: column;\\n  filter: drop-shadow(0px 0px 5px black);\\n  padding: 16px;\\n}\\n.quick-replies-item[_ngcontent-%COMP%] {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.quick-replies-item[_ngcontent-%COMP%]   .quick-replies-body[_ngcontent-%COMP%] {\\n  background: #6f6f6f;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  width: 50%;\\n  margin: 2px;\\n}\\n.chat-list[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px;\\n  overflow-y: scroll;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 8px 0px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #6f6f6f;\\n  margin: auto 8px;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%] {\\n  margin-right: auto;\\n  margin-left: 8px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-left: -10px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  margin-left: auto;\\n  flex-direction: row-reverse;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #14ab32;\\n  margin-right: -10px;\\n}\\n.chat-footer[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 16px;\\n  background: #6f6f6f;\\n  border-radius: 6px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #chat-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin: 0 8px;\\n  border: 0px;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  padding: 16px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #send-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  background: white;\\n  color: #6f6f6f;\\n  padding: 0 8px;\\n}\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0MsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFGRDtBQUtBO0VBQ0MsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxzQ0FBQTtFQUNBLGFBQUE7QUFIRDtBQU9BO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQUxGO0FBRUE7RUFNSSxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsVUFBQTtFQUNBLFdBQUE7QUFMSjtBQVFBO0VBQ0MsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUFORDtBQUNBO0VBUUcsY0FBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFOSDtBQUxBO0VBY0ssbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBTkw7QUFkQTtFQTBCRyxrQkFBQTtFQUNBLGdCQUFBO0FBVEg7QUFsQkE7RUE4Qkssa0JBQUE7QUFUTDtBQXJCQTtFQW1DRyxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7QUFYSDtBQTFCQTtFQXdDSyxtQkFBQTtFQUNBLG1CQUFBO0FBWEw7QUFnQkE7RUFDQyxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQWREO0FBU0E7RUFRRyxPQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSx1Q0FBQTtFQUNBLGFBQUE7QUFkSDtBQUVBO0VBZ0JHLFNBQUE7RUFDQSx1Q0FBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUFmSDtBQW9CQTtFQUNDLGFBQUE7QUFsQkQiLCJzb3VyY2VzQ29udGVudCI6WyJAYmFja2dyb3VuZDogI2JiYjtcbkBwcmltYXJ5OiAjNmY2ZjZmO1xuXG4uY29udGFpbmVyIHtcbiBkaXNwbGF5OiBmbGV4O1xuIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gbWFyZ2luLWxlZnQ6IDE4cHg7XG4gbWFyZ2luLXJpZ2h0OiAxOHB4O1xuIG1hcmdpbi10b3A6IDEwMHB4O1xufVxuXG4uY2FyZCB7XG4gYmFja2dyb3VuZDogQGJhY2tncm91bmQ7XG4gaGVpZ2h0OiA2MCU7XG4gd2lkdGg6IDUwMHB4O1xuIGhlaWdodDogNTAwcHg7XG4gZGlzcGxheTogZmxleDtcbiBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDBweCA1cHggYmxhY2spO1xuIHBhZGRpbmc6IDE2cHg7XG5cbn1cblxuLnF1aWNrLXJlcGxpZXMtaXRlbSB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gIC5xdWljay1yZXBsaWVzLWJvZHkge1xuICAgIGJhY2tncm91bmQ6IEBwcmltYXJ5O1xuICAgIHBhZGRpbmc6IDEycHggMjRweDtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMnB4O1xuICB9XG59XG4uY2hhdC1saXN0IHtcbiBtYXJnaW4tdG9wOiBhdXRvO1xuIGRpc3BsYXk6IGZsZXg7XG4gZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiBwYWRkaW5nOiAxNnB4O1xuIG92ZXJmbG93LXk6IHNjcm9sbDtcblxuIC5jaGF0LWl0ZW0ge1xuICAgbWF4LXdpZHRoOiA4MCU7XG4gICBtYXJnaW46IDhweCAwcHg7XG4gICBkaXNwbGF5OiBmbGV4O1xuICAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAgI21lc3NhZ2UtYm9keSB7XG4gICAgIGJhY2tncm91bmQ6IEBwcmltYXJ5O1xuICAgICBtYXJnaW46IGF1dG8gOHB4O1xuICAgICBwYWRkaW5nOiAxMnB4IDI0cHg7XG4gICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XG4gICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgZGlzcGxheTogZmxleDtcbiAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgIH1cbiB9XG5cblxuIC5sZWZ0IHtcbiAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgIG1hcmdpbi1sZWZ0OiA4cHg7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gICB9XG4gfVxuXG4gLnJpZ2h0IHtcbiAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBiYWNrZ3JvdW5kOiAjMTRhYjMyO1xuICAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICAgfVxuIH1cbn1cblxuLmNoYXQtZm9vdGVyIHtcbiBkaXNwbGF5OiBmbGV4O1xuIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gcGFkZGluZzogMTZweDtcbiBiYWNrZ3JvdW5kOiBAcHJpbWFyeTtcbiBib3JkZXItcmFkaXVzOiA2cHg7XG5cbiAjY2hhdC10ZXh0YXJlYSB7XG4gICBmbGV4OiAxO1xuICAgbWFyZ2luOiAwIDhweDtcbiAgIGJvcmRlcjogMHB4O1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgcGFkZGluZzogMTZweDtcbiB9XG5cbiAjc2VuZC1idXR0b24ge1xuICAgYm9yZGVyOiAwO1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICBjb2xvcjojNmY2ZjZmO1xuICAgcGFkZGluZzogMCA4cHg7XG4gfVxuXG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuIGRpc3BsYXk6IG5vbmU7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","chatbotApi","router","messages","id","user","bot","message","quick_replies","type","ngAfterViewChecked","scrollToBottom","saveChatbot","chatbot","chatMessages","push","human","send","subscribe","data","console","log","receive","navigate","error","alert","chatInputMessage","replaceInput","quick_reply","i","length","replace","dict_message","JSON","parse","text","maxScroll","list","nativeElement","scrollHeight","scrollTo","top","behavior","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.html","/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.ts"],"sourcesContent":["<script>alert(\"test\");</script>\n   <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"chat-list\" #chatListContainer>\n        <ng-container *ngFor=\"let item of chatMessages\">\n          <div class=\"chat-item\" [ngClass]=\"{'right' : item?.user?.id == human.id, 'left': item?.user?.id != human.id}\">\n            <p id=\"message-body\">{{item?.message}}</p>\n          </div>\n        </ng-container>\n      </div>\n      <ng-container *ngFor=\"let item of chatMessages\">\n        <div class=\"quick-replies-item\" *ngFor=\"let quick_reply of item?.quick_replies\">\n          <button class=\"quick-replies-body\" (click)=\"replaceInput(quick_reply)\" onclick=\"clearQuickReply()\">{{quick_reply}}</button>\n        </div>\n      </ng-container>\n      <div class=\"chat-footer\">\n        <input matInput id=\"chat-textarea\" (keydown.enter)=\"saveChatbot()\" [(ngModel)]=\"message\" required>\n        <button id=\"send-button\" (click)=\"saveChatbot()\" (keydown.enter)=\"saveChatbot()\" [disabled]=\"message === ''\">\n          send\n        </button>\n      </div>\n    </div>\n   </div>\n","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {ChatbotApiService} from \"./chatbot/chatbot-api.service\";\nimport {Router} from \"@angular/router\";\nimport {clearQuickReply} from '../assets/script';\n\ninterface Dictionary<T> {\n  [Key: string]: T;\n}\n\n@Component({\n selector: 'app-root',\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n title = 'chat-ui';\n\n message = \"\";\n\n chatbot = {\n     messages: [{\"df_type\":\"\", \"text\":\"\"}],\n };\n\n constructor(private chatbotApi: ChatbotApiService, private router: Router) { }\n\n @ViewChild('chatListContainer') list?: ElementRef<HTMLDivElement>;\n chatInputMessage: string = \"\";\n human = {\n    id: 1\n  }\n\n  bot = {\n    id: 2\n  }\n\n chatMessages: {\n  user: any,\n  message: string,\n  quick_replies: any,\n  type: string\n}[] = [\n  {\n    user: this.bot,\n    message: \"Hello I'm MECC or Miscellaneous Educational Cybersecurity Chatbot\\n\",\n    quick_replies: [],\n    type: \"text\"\n  },\n  {\n    user: this.bot,\n    message: \"A chatbot specialized in cybersecurity education and sensibilization.\",\n    quick_replies: [],\n    type: \"text\"\n  }\n];\n\n ngAfterViewChecked() {\n   this.scrollToBottom()\n }\n\n\n saveChatbot() {\n  this.chatbot.messages = [{\"df_type\":\"text\", \"text\":this.message}];\n  this.chatMessages.push({\n    message:  this.message,\n    quick_replies: [],\n    user: this.human,\n    type: \"text\"\n  });\n  this.chatbotApi.send(this.chatbot).subscribe(data => {\n    console.log(\"-----------> \", data.messages);\n    this.receive(data.messages);\n  });\n  this.chatbotApi\n    .saveChatbot(this.chatbot)\n    .subscribe(\n      () => this.router.navigate(['/']),\n      error => alert(error.message)\n    );\n  this.chatInputMessage = \"\"\n  this.scrollToBottom()\n}\nreplaceInput(quick_reply: string) { \n  console.log(\"REPLY : \", quick_reply);\n  this.chatbot.messages = [{\"df_type\":\"text\", \"text\":quick_reply}];\n  this.chatMessages.push({\n    message:  quick_reply,\n    quick_replies: [],\n    user: this.human,\n    type: \"text\"\n  });\n  this.chatbotApi.send(this.chatbot).subscribe(data => {\n    console.log(\"-----------> \", data.messages);\n    this.receive(data.messages);\n  });\n  this.chatbotApi\n    .saveChatbot(this.chatbot)\n    .subscribe(\n      () => this.router.navigate(['/']),\n      error => alert(error.message)\n    );\n  this.chatInputMessage = \"\"\n  this.scrollToBottom()\n };\n\nreceive(messages: Array<string>) {\n  for(let i=0; i<messages.length; i++){\n    messages[i] = messages[i].replace(/'/g, '\"');\n    var dict_message =JSON.parse(messages[i]);\n    if(dict_message.text != \"\"){\n      console.log(\"---> ..\", dict_message);\n      if(dict_message['df_type'] == 'text'){\n        this.chatMessages.push({\n          message: dict_message['text'],\n          quick_replies: [],\n          user: this.bot,\n          type: dict_message['df_type']\n        });\n      } else if(dict_message['df_type'] == 'quick_replies'){\n        this.chatMessages.push({\n          message: dict_message['text'],\n          quick_replies: dict_message['quick_replies'],\n          user: this.bot,\n          type: dict_message['df_type']\n        });\n      }\n    }\n  }\nthis.scrollToBottom()\n}\n scrollToBottom() {\n   const maxScroll = this.list?.nativeElement.scrollHeight;\n   this.list?.nativeElement.scrollTo({top: maxScroll, behavior: 'smooth'});\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}