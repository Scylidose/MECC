{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"chatListContainer\"];\nfunction AppComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"chatbot-form\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.title = 'chat-ui';\n    this.chatInputMessage = \"\";\n    this.human = {\n      id: 1,\n      profileImageUrl: 'https://cdn.pixabay.com/photo/2017/07/18/23/23/user-2517433_960_720.png'\n    };\n    this.bot = {\n      id: 2,\n      profileImageUrl: 'https://media.istockphoto.com/photos/3d-illustration-of-virtual-human-on-technology-background-picture-id1181533674?s=612x612'\n    };\n    this.chatMessages = [{\n      user: this.bot,\n      message: \"hi, I'm an AI. You can start any conversation...\"\n    }];\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  send() {\n    this.chatMessages.push({\n      message: this.chatInputMessage,\n      user: this.human\n    });\n    this.chatInputMessage = \"\";\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    const maxScroll = this.list?.nativeElement.scrollHeight;\n    this.list?.nativeElement.scrollTo({\n      top: maxScroll,\n      behavior: 'smooth'\n    });\n  }\n  generateFakeId() {\n    const current = new Date();\n    const timestamp = current.getTime();\n    return timestamp.toString();\n  }\n  clearConversation() {}\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"caption\"], [\"href\", \"https://gradealx.com\"], [1, \"container\"], [1, \"card\"], [1, \"chat-list\"], [\"chatListContainer\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chat-footer\"], [\"matInput\", \"\", \"id\", \"chat-textarea\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"send-button\", 3, \"disabled\", \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Welcome, visitor!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h1\");\n      i0.ɵɵtext(4, \"I am an AI Chat-bot developed by \");\n      i0.ɵɵelementStart(5, \"a\", 1);\n      i0.ɵɵtext(6, \"me\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"div\", 2)(8, \"div\", 3)(9, \"div\", 4, 5);\n      i0.ɵɵtemplate(11, AppComponent_ng_container_11_Template, 2, 0, \"ng-container\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 7)(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.chatInputMessage = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_14_listener() {\n        return ctx.send();\n      });\n      i0.ɵɵtext(15, \" send \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.chatInputMessage);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.chatInputMessage === \"\");\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-left: 18px;\\n  margin-right: 18px;\\n}\\n.caption[_ngcontent-%COMP%] {\\n  padding: 30px;\\n  text-align: center;\\n  color: #6c46bd;\\n}\\n#thumbnail[_ngcontent-%COMP%] {\\n  height: 130px;\\n  width: 130px;\\n  object-fit: cover;\\n  border-radius: 50%;\\n}\\n.card[_ngcontent-%COMP%] {\\n  background: white;\\n  height: 60%;\\n  width: 500px;\\n  height: 500px;\\n  display: flex;\\n  flex-direction: column;\\n  filter: drop-shadow(0px 0px 5px black);\\n  border-radius: 15px;\\n  padding: 16px;\\n}\\n.chat-list[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px;\\n  overflow-y: scroll;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 8px 0px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #6c46bd;\\n  margin: auto 8px;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #avatar[_ngcontent-%COMP%] {\\n  height: 44px;\\n  width: 44px;\\n  object-fit: cover;\\n  border-radius: 50%;\\n  z-index: 99;\\n  border: 3px solid white;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%] {\\n  margin-right: auto;\\n  margin-left: 8px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-left: -10px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  margin-left: auto;\\n  flex-direction: row-reverse;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-right: -10px;\\n}\\n.chat-footer[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 16px;\\n  background: #6c46bd;\\n  border-radius: 6px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #chat-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin: 0 8px;\\n  border: 0px;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  padding: 16px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #send-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  background: white;\\n  padding: 0 8px;\\n}\\n#clear-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\\n  color: white;\\n  padding: 10px;\\n  background: #6c46bd;\\n  border-radius: 6px;\\n}\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0MsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBRkQ7QUFLQTtFQUNDLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFIRDtBQU1BO0VBQ0MsYUFBQTtFQUNBLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBSkQ7QUFPQTtFQUNDLGlCQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0Esc0NBQUE7RUFDQSxtQkFBQTtFQUNBLGFBQUE7QUFMRDtBQVNBO0VBQ0MsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7QUFQRDtBQUVBO0VBU0csY0FBQTtFQUNBLGVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFSSDtBQUpBO0VBZUssbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0VBQ0EsbUJBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBUkw7QUFiQTtFQXlCSyxZQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7QUFUTDtBQXJCQTtFQW1DRyxrQkFBQTtFQUNBLGdCQUFBO0FBWEg7QUF6QkE7RUF1Q0ssa0JBQUE7QUFYTDtBQTVCQTtFQTRDRyxpQkFBQTtFQUNBLGlCQUFBO0VBQ0EsMkJBQUE7QUFiSDtBQWpDQTtFQWlESyxtQkFBQTtBQWJMO0FBa0JBO0VBQ0MsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFoQkQ7QUFXQTtFQVFHLE9BQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLHVDQUFBO0VBQ0EsYUFBQTtBQWhCSDtBQUlBO0VBZ0JHLFNBQUE7RUFDQSx1Q0FBQTtFQUNBLGlCQUFBO0VBQ0EsY0FBQTtBQWpCSDtBQXNCQTtFQUNDLFNBQUE7RUFDQSxzQ0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQXBCRDtBQXVCQTtFQUNDLGFBQUE7QUFyQkQiLCJzb3VyY2VzQ29udGVudCI6WyJAYmFja2dyb3VuZDogd2hpdGU7XG5AcHJpbWFyeTogIzZjNDZiZDtcblxuLmNvbnRhaW5lciB7XG4gZGlzcGxheTogZmxleDtcbiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiBhbGlnbi1pdGVtczogY2VudGVyO1xuIG1hcmdpbi1sZWZ0OiAxOHB4O1xuIG1hcmdpbi1yaWdodDogMThweDtcbn1cblxuLmNhcHRpb24ge1xuIHBhZGRpbmc6IDMwcHg7XG4gdGV4dC1hbGlnbjogY2VudGVyO1xuIGNvbG9yOiBAcHJpbWFyeTtcbn1cblxuI3RodW1ibmFpbCB7XG4gaGVpZ2h0OiAxMzBweDtcbiB3aWR0aDogMTMwcHg7XG4gb2JqZWN0LWZpdDogY292ZXI7XG4gYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uY2FyZCB7XG4gYmFja2dyb3VuZDogQGJhY2tncm91bmQ7XG4gaGVpZ2h0OiA2MCU7XG4gd2lkdGg6IDUwMHB4O1xuIGhlaWdodDogNTAwcHg7XG4gZGlzcGxheTogZmxleDtcbiBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDBweCA1cHggYmxhY2spO1xuIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gcGFkZGluZzogMTZweDtcblxufVxuXG4uY2hhdC1saXN0IHtcbiBtYXJnaW4tdG9wOiBhdXRvO1xuIGRpc3BsYXk6IGZsZXg7XG4gZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiBwYWRkaW5nOiAxNnB4O1xuIG92ZXJmbG93LXk6IHNjcm9sbDtcblxuXG4gLmNoYXQtaXRlbSB7XG4gICBtYXgtd2lkdGg6IDgwJTtcbiAgIG1hcmdpbjogOHB4IDBweDtcbiAgIGRpc3BsYXk6IGZsZXg7XG4gICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gICAjbWVzc2FnZS1ib2R5IHtcbiAgICAgYmFja2dyb3VuZDogQHByaW1hcnk7XG4gICAgIG1hcmdpbjogYXV0byA4cHg7XG4gICAgIHBhZGRpbmc6IDEycHggMjRweDtcbiAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgY29sb3I6IHdoaXRlO1xuICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgfVxuXG4gICAjYXZhdGFyIHtcbiAgICAgaGVpZ2h0OiA0NHB4O1xuICAgICB3aWR0aDogNDRweDtcbiAgICAgb2JqZWN0LWZpdDogY292ZXI7XG4gICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgei1pbmRleDogOTk7XG4gICAgIGJvcmRlcjogM3B4IHNvbGlkIEBiYWNrZ3JvdW5kO1xuICAgfVxuIH1cblxuIC5sZWZ0IHtcbiAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgIG1hcmdpbi1sZWZ0OiA4cHg7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gICB9XG4gfVxuXG4gLnJpZ2h0IHtcbiAgIG1hcmdpbi1yaWdodDogOHB4O1xuICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG5cbiAgICNtZXNzYWdlLWJvZHkge1xuICAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICAgfVxuIH1cbn1cblxuLmNoYXQtZm9vdGVyIHtcbiBkaXNwbGF5OiBmbGV4O1xuIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gcGFkZGluZzogMTZweDtcbiBiYWNrZ3JvdW5kOiBAcHJpbWFyeTtcbiBib3JkZXItcmFkaXVzOiA2cHg7XG5cbiAjY2hhdC10ZXh0YXJlYSB7XG4gICBmbGV4OiAxO1xuICAgbWFyZ2luOiAwIDhweDtcbiAgIGJvcmRlcjogMHB4O1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgcGFkZGluZzogMTZweDtcbiB9XG5cbiAjc2VuZC1idXR0b24ge1xuICAgYm9yZGVyOiAwO1xuICAgYm94LXNoYWRvdzogMCAwIDE2cHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICBwYWRkaW5nOiAwIDhweDtcbiB9XG5cbn1cblxuI2NsZWFyLWJ1dHRvbiB7XG4gYm9yZGVyOiAwO1xuIGJveC1zaGFkb3c6IDAgMCAzcHggcmdiYSgwLCAwLCAwLCAwLjUpO1xuIGNvbG9yOiB3aGl0ZTtcbiBwYWRkaW5nOiAxMHB4O1xuIGJhY2tncm91bmQ6IEBwcmltYXJ5O1xuIGJvcmRlci1yYWRpdXM6IDZweDtcbn1cblxuOjotd2Via2l0LXNjcm9sbGJhciB7XG4gZGlzcGxheTogbm9uZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAOQA,6BAAgD;IAC9CA,+BAA6B;IAC/BA,0BAAe;;;ACFvB,OAAM,MAAOC,YAAY;EALzBC;IAMC,UAAK,GAAG,SAAS;IAGjB,qBAAgB,GAAW,EAAE;IAC7B,UAAK,GAAG;MACNC,EAAE,EAAE,CAAC;MACLC,eAAe,EAAE;KAClB;IAED,QAAG,GAAG;MACJD,EAAE,EAAE,CAAC;MACLC,eAAe,EAAE;KAClB;IAED,iBAAY,GAGN,CACJ;MACEC,IAAI,EAAE,IAAI,CAACC,GAAG;MACdC,OAAO,EAAE;KACV,CACF;;EAEDC,kBAAkB;IAChB,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAC,IAAI;IACF,IAAI,CAACC,YAAY,CAACC,IAAI,CAAC;MACrBL,OAAO,EAAE,IAAI,CAACM,gBAAgB;MAC9BR,IAAI,EAAE,IAAI,CAACS;KACZ,CAAC;IAEF,IAAI,CAACD,gBAAgB,GAAG,EAAE;IAC1B,IAAI,CAACJ,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,MAAMM,SAAS,GAAG,IAAI,CAACC,IAAI,EAAEC,aAAa,CAACC,YAAY;IACvD,IAAI,CAACF,IAAI,EAAEC,aAAa,CAACE,QAAQ,CAAC;MAACC,GAAG,EAAEL,SAAS;MAAEM,QAAQ,EAAE;IAAQ,CAAC,CAAC;EACzE;EAEAC,cAAc;IACZ,MAAMC,OAAO,GAAG,IAAIC,IAAI,EAAE;IAC1B,MAAMC,SAAS,GAAGF,OAAO,CAACG,OAAO,EAAE;IACnC,OAAOD,SAAS,CAACE,QAAQ,EAAE;EAC7B;EAEAC,iBAAiB,IAEjB;;AApDY3B,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAA4B;EAAAC;IAAA;;;;;;;;;;;;;MDPzB9B,8BAAqB;MACbA,iCAAiB;MAAAA,iBAAK;MAC1BA,0BAAI;MAAAA,iDAAiC;MAAAA,4BAA+B;MAAAA,kBAAE;MAAAA,iBAAI;MAE3EA,8BAAuB;MAGlBA,iFAEe;MACjBA,iBAAM;MACNA,+BAAyB;MACYA;QAAA;MAAA,EAA8B;MAAjEA,iBAA2E;MAC3EA,kCAA+E;MAAtDA;QAAA,OAAS+B,UAAM;MAAA,EAAC;MACvC/B,uBACF;MAAAA,iBAAS;;;MARsBA,gBAAe;MAAfA,0CAAe;MAKXA,eAA8B;MAA9BA,8CAA8B;MACvBA,eAAoC;MAApCA,sDAAoC","names":["i0","AppComponent","constructor","id","profileImageUrl","user","bot","message","ngAfterViewChecked","scrollToBottom","send","chatMessages","push","chatInputMessage","human","maxScroll","list","nativeElement","scrollHeight","scrollTo","top","behavior","generateFakeId","current","Date","timestamp","getTime","toString","clearConversation","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.html","/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.ts"],"sourcesContent":["<div class=\"caption\">\n    <h1>Welcome, visitor!</h1>\n    <h1>I am an AI Chat-bot developed by <a href=\"https://gradealx.com\">me</a></h1>\n   </div>\n   <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"chat-list\" #chatListContainer>\n        <ng-container *ngFor=\"let item of chatMessages\">\n          <chatbot-form></chatbot-form>\n        </ng-container>\n      </div>\n      <div class=\"chat-footer\">\n        <input matInput id=\"chat-textarea\" [(ngModel)]=\"chatInputMessage\" required>\n        <button id=\"send-button\" (click)=\"send()\" [disabled]=\"chatInputMessage === ''\">\n          send\n        </button>\n      </div>\n    </div>\n   </div>","import {Component, ElementRef, ViewChild} from '@angular/core';\n\n@Component({\n selector: 'app-root',\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n title = 'chat-ui';\n\n @ViewChild('chatListContainer') list?: ElementRef<HTMLDivElement>;\n chatInputMessage: string = \"\";\n human = {\n   id: 1,\n   profileImageUrl: 'https://cdn.pixabay.com/photo/2017/07/18/23/23/user-2517433_960_720.png'\n }\n\n bot = {\n   id: 2,\n   profileImageUrl: 'https://media.istockphoto.com/photos/3d-illustration-of-virtual-human-on-technology-background-picture-id1181533674?s=612x612'\n }\n\n chatMessages: {\n   user: any,\n   message: string\n }[] = [\n   {\n     user: this.bot,\n     message: \"hi, I'm an AI. You can start any conversation...\"\n   },\n ];\n\n ngAfterViewChecked() {\n   this.scrollToBottom()\n }\n\n send() {\n   this.chatMessages.push({\n     message: this.chatInputMessage,\n     user: this.human\n   });\n\n   this.chatInputMessage = \"\"\n   this.scrollToBottom()\n }\n\n scrollToBottom() {\n   const maxScroll = this.list?.nativeElement.scrollHeight;\n   this.list?.nativeElement.scrollTo({top: maxScroll, behavior: 'smooth'});\n }\n\n generateFakeId(): string {\n   const current = new Date();\n   const timestamp = current.getTime();\n   return timestamp.toString()\n }\n\n clearConversation() {\n\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}