{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbot/chatbot-api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = [\"chatListContainer\"];\nfunction AppComponent_ng_container_4_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r3 == null ? null : item_r3.message);\n  }\n}\nfunction AppComponent_ng_container_4_iframe_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"iframe\", 12);\n  }\n  if (rf & 2) {\n    const item_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"src\", item_r3 == null ? null : item_r3.message, i0.ɵɵsanitizeResourceUrl);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"right\": a0,\n    \"left\": a1\n  };\n};\nfunction AppComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_4_p_2_Template, 2, 1, \"p\", 9);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_4_iframe_3_Template, 1, 1, \"iframe\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c1, (item_r3 == null ? null : item_r3.user == null ? null : item_r3.user.id) == ctx_r1.human.id, (item_r3 == null ? null : item_r3.user == null ? null : item_r3.user.id) != ctx_r1.human.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (item_r3 == null ? null : item_r3.type) === \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (item_r3 == null ? null : item_r3.type) === \"youtube_link\");\n  }\n}\nfunction AppComponent_ng_container_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_5_div_2_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const quick_reply_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r11.replaceInput(quick_reply_r10));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quick_reply_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quick_reply_r10);\n  }\n}\nfunction AppComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 13);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_5_div_2_Template, 3, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", item_r8 == null ? null : item_r8.quick_replies);\n  }\n}\nexport class AppComponent {\n  constructor(chatbotApi, router, _sanitizer) {\n    this.chatbotApi = chatbotApi;\n    this.router = router;\n    this._sanitizer = _sanitizer;\n    this.title = 'chat-ui';\n    this.message = \"\";\n    this.chatbot = {\n      messages: [{\n        \"df_type\": \"\",\n        \"text\": \"\"\n      }]\n    };\n    this.chatInputMessage = \"\";\n    this.human = {\n      id: 1\n    };\n    this.bot = {\n      id: 2\n    };\n    this.chatMessages = [{\n      user: this.bot,\n      message: \"Hey!\",\n      quick_replies: [],\n      type: \"text\"\n    }];\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  saveChatbot() {\n    this.chatbot.messages = [{\n      \"df_type\": \"text\",\n      \"text\": this.message\n    }];\n    this.chatMessages.push({\n      message: this.message,\n      quick_replies: [],\n      user: this.human,\n      type: \"text\"\n    });\n    this.chatbotApi.send(this.chatbot).subscribe(data => {\n      this.receive(data.messages);\n    });\n    this.chatbotApi.saveChatbot(this.chatbot).subscribe(() => this.router.navigate(['/']), error => alert(error.message));\n    this.chatInputMessage = \"\";\n    this.scrollToBottom();\n  }\n  replaceInput(quick_reply) {\n    this.chatbot.messages = [{\n      \"df_type\": \"text\",\n      \"text\": quick_reply\n    }];\n    this.chatMessages.push({\n      message: quick_reply,\n      quick_replies: [],\n      user: this.human,\n      type: \"text\"\n    });\n    this.chatbotApi.send(this.chatbot).subscribe(data => {\n      this.receive(data.messages);\n    });\n    this.chatbotApi.saveChatbot(this.chatbot).subscribe(() => this.router.navigate(['/']), error => alert(error.message));\n    this.chatInputMessage = \"\";\n    this.scrollToBottom();\n  }\n  receive(messages) {\n    for (let i = 0; i < messages.length; i++) {\n      messages[i] = messages[i].replace(/'/g, '\"');\n      var dict_message = JSON.parse(messages[i]);\n      if (dict_message.text != \"\") {\n        if (dict_message['df_type'] == 'text') {\n          if (dict_message['text'].match(/youtube\\.com/)) {\n            const videoId = this.getId(dict_message['text']);\n            var videoURL = '//www.youtube.com/embed/' + videoId;\n            dict_message['text'] = this._sanitizer.bypassSecurityTrustResourceUrl(videoURL);\n            dict_message['df_type'] = \"youtube_link\";\n          }\n          this.chatMessages.push({\n            message: dict_message['text'],\n            quick_replies: [],\n            user: this.bot,\n            type: dict_message['df_type']\n          });\n        } else if (dict_message['df_type'] == 'quick_replies') {\n          this.chatMessages.push({\n            message: dict_message['text'],\n            quick_replies: dict_message['quick_replies'],\n            user: this.bot,\n            type: dict_message['df_type']\n          });\n        }\n      }\n    }\n    this.scrollToBottom();\n  }\n  getId(url) {\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n    return match && match[2].length === 11 ? match[2] : null;\n  }\n  scrollToBottom() {\n    const maxScroll = this.list?.nativeElement.scrollHeight;\n    this.list?.nativeElement.scrollTo({\n      top: maxScroll,\n      behavior: 'smooth'\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ChatbotApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DomSanitizer));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.list = _t.first);\n    }\n  },\n  decls: 10,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"card\"], [1, \"chat-list\"], [\"chatListContainer\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"chat-footer\"], [\"matInput\", \"\", \"id\", \"chat-textarea\", \"required\", \"\", 3, \"ngModel\", \"keydown.enter\", \"ngModelChange\"], [\"id\", \"send-button\", 3, \"disabled\", \"click\", \"keydown.enter\"], [1, \"chat-item\", 3, \"ngClass\"], [\"id\", \"message-body\", 4, \"ngIf\"], [\"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\", 4, \"ngIf\"], [\"id\", \"message-body\"], [\"frameborder\", \"0\", \"allowfullscreen\", \"\", 3, \"src\"], [1, \"quick-replies-list\"], [\"class\", \"quick-replies-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"quick-replies-item\"], [\"onclick\", \"clearQuickReply()\", 1, \"quick-replies-body\", 3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2, 3);\n      i0.ɵɵtemplate(4, AppComponent_ng_container_4_Template, 4, 6, \"ng-container\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, AppComponent_ng_container_5_Template, 3, 1, \"ng-container\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"input\", 6);\n      i0.ɵɵlistener(\"keydown.enter\", function AppComponent_Template_input_keydown_enter_7_listener() {\n        return ctx.saveChatbot();\n      })(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.message = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_8_listener() {\n        return ctx.saveChatbot();\n      })(\"keydown.enter\", function AppComponent_Template_button_keydown_enter_8_listener() {\n        return ctx.saveChatbot();\n      });\n      i0.ɵɵtext(9, \" send \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.message);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.message === \"\");\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.RequiredValidator, i5.NgModel],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-left: 18px;\\n  margin-right: 18px;\\n  margin-top: 50px;\\n}\\n.card[_ngcontent-%COMP%] {\\n  background: #bbb;\\n  height: 60%;\\n  width: 500px;\\n  height: 700px;\\n  display: flex;\\n  flex-direction: column;\\n  filter: drop-shadow(0px 0px 5px black);\\n  padding: 16px;\\n}\\n.quick-replies-item[_ngcontent-%COMP%] {\\n  width: 50%;\\n  display: inline-block;\\n  flex-direction: row;\\n}\\n.quick-replies-item[_ngcontent-%COMP%]   .quick-replies-body[_ngcontent-%COMP%] {\\n  background: #6f6f6f;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  width: 100%;\\n  margin: 2px;\\n}\\n.chat-list[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n  display: flex;\\n  flex-direction: column;\\n  padding: 16px;\\n  overflow-y: scroll;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%] {\\n  max-width: 80%;\\n  margin: 8px 0px;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .chat-item[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #6f6f6f;\\n  margin: auto 8px;\\n  padding: 12px 24px;\\n  border-radius: 30px;\\n  color: white;\\n  display: flex;\\n  flex-direction: row;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%] {\\n  margin-right: auto;\\n  margin-left: 8px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .left[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  margin-left: -10px;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  margin-left: auto;\\n  flex-direction: row-reverse;\\n}\\n.chat-list[_ngcontent-%COMP%]   .right[_ngcontent-%COMP%]   #message-body[_ngcontent-%COMP%] {\\n  background: #14ab32;\\n  margin-right: -10px;\\n}\\n.chat-footer[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: row;\\n  padding: 16px;\\n  background: #6f6f6f;\\n  border-radius: 6px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #chat-textarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  margin: 0 8px;\\n  border: 0px;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  padding: 16px;\\n}\\n.chat-footer[_ngcontent-%COMP%]   #send-button[_ngcontent-%COMP%] {\\n  border: 0;\\n  box-shadow: 0 0 16px rgba(0, 0, 0, 0.5);\\n  background: white;\\n  color: #6f6f6f;\\n  padding: 0 8px;\\n}\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0MsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFGRDtBQUtBO0VBQ0MsZ0JBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxzQ0FBQTtFQUNBLGFBQUE7QUFIRDtBQU9BO0VBQ0UsVUFBQTtFQUNBLHFCQUFBO0VBQ0EsbUJBQUE7QUFMRjtBQUVBO0VBTUksbUJBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxXQUFBO0FBTEo7QUFRQTtFQUNDLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0FBTkQ7QUFDQTtFQVFHLGNBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBTkg7QUFMQTtFQWNLLG1CQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtBQU5MO0FBZEE7RUEwQkcsa0JBQUE7RUFDQSxnQkFBQTtBQVRIO0FBbEJBO0VBOEJLLGtCQUFBO0FBVEw7QUFyQkE7RUFtQ0csaUJBQUE7RUFDQSxpQkFBQTtFQUNBLDJCQUFBO0FBWEg7QUExQkE7RUF3Q0ssbUJBQUE7RUFDQSxtQkFBQTtBQVhMO0FBZ0JBO0VBQ0MsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7QUFkRDtBQVNBO0VBUUcsT0FBQTtFQUNBLGFBQUE7RUFDQSxXQUFBO0VBQ0EsdUNBQUE7RUFDQSxhQUFBO0FBZEg7QUFFQTtFQWdCRyxTQUFBO0VBQ0EsdUNBQUE7RUFDQSxpQkFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0FBZkg7QUFvQkE7RUFDQyxhQUFBO0FBbEJEIiwic291cmNlc0NvbnRlbnQiOlsiQGJhY2tncm91bmQ6ICNiYmI7XG5AcHJpbWFyeTogIzZmNmY2ZjtcblxuLmNvbnRhaW5lciB7XG4gZGlzcGxheTogZmxleDtcbiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiBhbGlnbi1pdGVtczogY2VudGVyO1xuIG1hcmdpbi1sZWZ0OiAxOHB4O1xuIG1hcmdpbi1yaWdodDogMThweDtcbiBtYXJnaW4tdG9wOiA1MHB4O1xufVxuXG4uY2FyZCB7XG4gYmFja2dyb3VuZDogQGJhY2tncm91bmQ7XG4gaGVpZ2h0OiA2MCU7XG4gd2lkdGg6IDUwMHB4O1xuIGhlaWdodDogNzAwcHg7XG4gZGlzcGxheTogZmxleDtcbiBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuIGZpbHRlcjogZHJvcC1zaGFkb3coMHB4IDBweCA1cHggYmxhY2spO1xuIHBhZGRpbmc6IDE2cHg7XG5cbn1cblxuLnF1aWNrLXJlcGxpZXMtaXRlbSB7XG4gIHdpZHRoOiA1MCU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcblxuICAucXVpY2stcmVwbGllcy1ib2R5IHtcbiAgICBiYWNrZ3JvdW5kOiBAcHJpbWFyeTtcbiAgICBwYWRkaW5nOiAxMnB4IDI0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAycHg7XG4gIH1cbn1cbi5jaGF0LWxpc3Qge1xuIG1hcmdpbi10b3A6IGF1dG87XG4gZGlzcGxheTogZmxleDtcbiBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuIHBhZGRpbmc6IDE2cHg7XG4gb3ZlcmZsb3cteTogc2Nyb2xsO1xuXG4gLmNoYXQtaXRlbSB7XG4gICBtYXgtd2lkdGg6IDgwJTtcbiAgIG1hcmdpbjogOHB4IDBweDtcbiAgIGRpc3BsYXk6IGZsZXg7XG4gICBmbGV4LWRpcmVjdGlvbjogcm93O1xuXG4gICAjbWVzc2FnZS1ib2R5IHtcbiAgICAgYmFja2dyb3VuZDogQHByaW1hcnk7XG4gICAgIG1hcmdpbjogYXV0byA4cHg7XG4gICAgIHBhZGRpbmc6IDEycHggMjRweDtcbiAgICAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgICAgY29sb3I6IHdoaXRlO1xuICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgfVxuIH1cblxuXG4gLmxlZnQge1xuICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgbWFyZ2luLWxlZnQ6IDhweDtcblxuICAgI21lc3NhZ2UtYm9keSB7XG4gICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgIH1cbiB9XG5cbiAucmlnaHQge1xuICAgbWFyZ2luLXJpZ2h0OiA4cHg7XG4gICBtYXJnaW4tbGVmdDogYXV0bztcbiAgIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcblxuICAgI21lc3NhZ2UtYm9keSB7XG4gICAgIGJhY2tncm91bmQ6ICMxNGFiMzI7XG4gICAgIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gICB9XG4gfVxufVxuXG4uY2hhdC1mb290ZXIge1xuIGRpc3BsYXk6IGZsZXg7XG4gZmxleC1kaXJlY3Rpb246IHJvdztcbiBwYWRkaW5nOiAxNnB4O1xuIGJhY2tncm91bmQ6IEBwcmltYXJ5O1xuIGJvcmRlci1yYWRpdXM6IDZweDtcblxuICNjaGF0LXRleHRhcmVhIHtcbiAgIGZsZXg6IDE7XG4gICBtYXJnaW46IDAgOHB4O1xuICAgYm9yZGVyOiAwcHg7XG4gICBib3gtc2hhZG93OiAwIDAgMTZweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICBwYWRkaW5nOiAxNnB4O1xuIH1cblxuICNzZW5kLWJ1dHRvbiB7XG4gICBib3JkZXI6IDA7XG4gICBib3gtc2hhZG93OiAwIDAgMTZweCByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgIGNvbG9yOiM2ZjZmNmY7XG4gICBwYWRkaW5nOiAwIDhweDtcbiB9XG5cbn1cblxuOjotd2Via2l0LXNjcm9sbGJhciB7XG4gZGlzcGxheTogbm9uZTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","chatbotApi","router","_sanitizer","messages","id","user","bot","message","quick_replies","type","ngAfterViewChecked","scrollToBottom","saveChatbot","chatbot","chatMessages","push","human","send","subscribe","data","receive","navigate","error","alert","chatInputMessage","replaceInput","quick_reply","i","length","replace","dict_message","JSON","parse","text","match","videoId","getId","videoURL","bypassSecurityTrustResourceUrl","url","regExp","maxScroll","list","nativeElement","scrollHeight","scrollTo","top","behavior","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.html","/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/app.component.ts"],"sourcesContent":["<script>alert(\"test\");</script>\n   <div class=\"container\">\n    <div class=\"card\">\n      <div class=\"chat-list\" #chatListContainer>\n        <ng-container *ngFor=\"let item of chatMessages\">\n          <div class=\"chat-item\" [ngClass]=\"{'right' : item?.user?.id == human.id, 'left': item?.user?.id != human.id}\">\n            <p *ngIf=\"item?.type==='text'\" id=\"message-body\">{{item?.message}}</p>\n            <iframe *ngIf=\"item?.type==='youtube_link'\" [src]='item?.message' frameborder=\"0\" allowfullscreen></iframe>\n          </div>\n        </ng-container>\n      </div>\n      <ng-container *ngFor=\"let item of chatMessages\">\n        <div class=\"quick-replies-list\">\n          <div class=\"quick-replies-item\" *ngFor=\"let quick_reply of item?.quick_replies\">\n            <button class=\"quick-replies-body\" (click)=\"replaceInput(quick_reply)\" onclick=\"clearQuickReply()\">{{quick_reply}}</button>\n          </div>\n        </div>\n      </ng-container>\n      <div class=\"chat-footer\">\n        <input matInput id=\"chat-textarea\" (keydown.enter)=\"saveChatbot()\" [(ngModel)]=\"message\" required>\n        <button id=\"send-button\" (click)=\"saveChatbot()\" (keydown.enter)=\"saveChatbot()\" [disabled]=\"message === ''\">\n          send\n        </button>\n      </div>\n    </div>\n   </div>\n","import {Component, ElementRef, ViewChild} from '@angular/core';\nimport {ChatbotApiService} from \"./chatbot/chatbot-api.service\";\nimport {Router} from \"@angular/router\";\nimport { DomSanitizer } from '@angular/platform-browser';\n\ninterface Dictionary<T> {\n  [Key: string]: T;\n}\n\n@Component({\n selector: 'app-root',\n templateUrl: './app.component.html',\n styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n title = 'chat-ui';\n\n message = \"\";\n\n chatbot = {\n     messages: [{\"df_type\":\"\", \"text\":\"\"}],\n };\n\n constructor(private chatbotApi: ChatbotApiService, private router: Router, private _sanitizer: DomSanitizer) { }\n\n @ViewChild('chatListContainer') list?: ElementRef<HTMLDivElement>;\n chatInputMessage: string = \"\";\n human = {\n    id: 1\n  }\n\n  bot = {\n    id: 2\n  }\n\n chatMessages: {\n  user: any,\n  message: string,\n  quick_replies: any,\n  type: string\n}[] = [\n  {\n    user: this.bot,\n    message: \"Hey!\",\n    quick_replies: [],\n    type: \"text\"\n  }\n];\n\n ngAfterViewChecked() {\n   this.scrollToBottom()\n }\n\n\n saveChatbot() {\n  this.chatbot.messages = [{\"df_type\":\"text\", \"text\":this.message}];\n  this.chatMessages.push({\n    message:  this.message,\n    quick_replies: [],\n    user: this.human,\n    type: \"text\"\n  });\n  this.chatbotApi.send(this.chatbot).subscribe(data => {\n    this.receive(data.messages);\n  });\n  this.chatbotApi\n    .saveChatbot(this.chatbot)\n    .subscribe(\n      () => this.router.navigate(['/']),\n      error => alert(error.message)\n    );\n  this.chatInputMessage = \"\"\n  this.scrollToBottom()\n}\nreplaceInput(quick_reply: string) { \n  this.chatbot.messages = [{\"df_type\":\"text\", \"text\":quick_reply}];\n  this.chatMessages.push({\n    message:  quick_reply,\n    quick_replies: [],\n    user: this.human,\n    type: \"text\"\n  });\n  this.chatbotApi.send(this.chatbot).subscribe(data => {\n    this.receive(data.messages);\n  });\n  this.chatbotApi\n    .saveChatbot(this.chatbot)\n    .subscribe(\n      () => this.router.navigate(['/']),\n      error => alert(error.message)\n    );\n  this.chatInputMessage = \"\"\n  this.scrollToBottom()\n };\n\nreceive(messages: Array<string>) {\n  for(let i=0; i<messages.length; i++){\n    messages[i] = messages[i].replace(/'/g, '\"');\n    var dict_message =JSON.parse(messages[i]);\n    if(dict_message.text != \"\"){\n      if(dict_message['df_type'] == 'text'){\n        if(dict_message['text'].match(/youtube\\.com/)) {\n          const videoId = this.getId(dict_message['text']);\n          var videoURL = '//www.youtube.com/embed/'+ videoId;\n          dict_message['text'] = this._sanitizer.bypassSecurityTrustResourceUrl(videoURL);\n          dict_message['df_type'] = \"youtube_link\"\n        }     \n        this.chatMessages.push({\n          message: dict_message['text'],\n          quick_replies: [],\n          user: this.bot,\n          type: dict_message['df_type']\n        });\n      } else if(dict_message['df_type'] == 'quick_replies'){\n        this.chatMessages.push({\n          message: dict_message['text'],\n          quick_replies: dict_message['quick_replies'],\n          user: this.bot,\n          type: dict_message['df_type']\n        });\n      }\n    }\n  }\nthis.scrollToBottom()\n}\n\ngetId(url: string) {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n\n  return (match && match[2].length === 11)\n    ? match[2]\n    : null;\n}\n scrollToBottom() {\n   const maxScroll = this.list?.nativeElement.scrollHeight;\n   this.list?.nativeElement.scrollTo({top: maxScroll, behavior: 'smooth'});\n }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}