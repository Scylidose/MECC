{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class SafePipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\nSafePipe.ɵfac = function SafePipe_Factory(t) {\n  return new (t || SafePipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\nSafePipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"safe\",\n  type: SafePipe,\n  pure: true\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,QAAQ;EAEnBC,YAAoBC,SAAuB;IAAvB,cAAS,GAATA,SAAS;EAAkB;EAC/CC,SAAS,CAACC,GAAW;IACnB,OAAO,IAAI,CAACF,SAAS,CAACG,8BAA8B,CAACD,GAAG,CAAC;EAC3D;;AALWJ,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;;QAARA,QAAQ;EAAAM;AAAA","names":["SafePipe","constructor","sanitizer","transform","url","bypassSecurityTrustResourceUrl","pure"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/safe.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safe'\n})\nexport class SafePipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url: string) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}