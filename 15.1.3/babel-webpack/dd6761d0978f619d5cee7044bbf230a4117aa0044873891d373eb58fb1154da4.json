{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./chatbot-api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./chatbot.component\";\nexport class ChatbotFormComponent {\n  constructor(chatbotApi, router) {\n    this.chatbotApi = chatbotApi;\n    this.router = router;\n    this.chatbot = {\n      message: '',\n      response: ''\n    };\n    // inputEnterListener();\n  }\n\n  updateMessage(event) {\n    this.chatbot.message = event.target.value;\n  }\n  updateResponse(event) {\n    this.chatbot.response = event.target.value;\n  }\n  saveChatbot() {\n    this.chatbotApi.saveChatbot(this.chatbot).subscribe(() => this.router.navigate(['/']), error => alert(error.message));\n  }\n}\nChatbotFormComponent.ɵfac = function ChatbotFormComponent_Factory(t) {\n  return new (t || ChatbotFormComponent)(i0.ɵɵdirectiveInject(i1.ChatbotApiService), i0.ɵɵdirectiveInject(i2.Router));\n};\nChatbotFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatbotFormComponent,\n  selectors: [[\"chatbot-form\"]],\n  decls: 5,\n  vars: 0,\n  consts: [[\"id\", \"chatbot-message\", 3, \"keyup\"], [\"id\", \"send-message\", 3, \"click\"]],\n  template: function ChatbotFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"chatbot\");\n      i0.ɵɵelementStart(1, \"div\")(2, \"input\", 0);\n      i0.ɵɵlistener(\"keyup\", function ChatbotFormComponent_Template_input_keyup_2_listener($event) {\n        return ctx.updateMessage($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ChatbotFormComponent_Template_button_click_3_listener() {\n        return ctx.saveChatbot();\n      });\n      i0.ɵɵtext(4, \"Send Message\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i3.ChatbotComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;AAgBA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,UAA6B,EAAUC,MAAc;IAArD,eAAU,GAAVD,UAAU;IAA6B,WAAM,GAANC,MAAM;IALjE,YAAO,GAAG;MACRC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;KACX;IAGC;EACD;;EAEDC,aAAa,CAACC,KAAU;IACtB,IAAI,CAACC,OAAO,CAACJ,OAAO,GAAGG,KAAK,CAACE,MAAM,CAACC,KAAK;EAC3C;EAEAC,cAAc,CAACJ,KAAU;IACvB,IAAI,CAACC,OAAO,CAACH,QAAQ,GAAGE,KAAK,CAACE,MAAM,CAACC,KAAK;EAC5C;EAEAE,WAAW;IACT,IAAI,CAACV,UAAU,CACZU,WAAW,CAAC,IAAI,CAACJ,OAAO,CAAC,CACzBK,SAAS,CACR,MAAM,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EACjCC,KAAK,IAAIC,KAAK,CAACD,KAAK,CAACX,OAAO,CAAC,CAC9B;EACL;;AAzBWJ,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAP7BC,0BAAmB;MACnBA,2BAAK;MAC2BA;QAAA,OAASC,yBAAqB;MAAA,EAAC;MAA3DD,iBAA4D;MAC5DA,iCAAkD;MAAxBA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,4BAAY;MAAAA,iBAAS","names":["ChatbotFormComponent","constructor","chatbotApi","router","message","response","updateMessage","event","chatbot","target","value","updateResponse","saveChatbot","subscribe","navigate","error","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/jordisaleilles/Desktop/MECC/MECC/frontend/src/app/chatbot/chatbot-form.component.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {ChatbotApiService} from \"./chatbot-api.service\";\nimport {Router} from \"@angular/router\";\ndeclare function inputEnterListener(): void;\n\n@Component({\n  selector: 'chatbot-form',\n  template: `\n    <chatbot></chatbot>\n    <div>\n        <input id=\"chatbot-message\" (keyup)=\"updateMessage($event)\">\n        <button id=\"send-message\" (click)=\"saveChatbot()\">Send Message</button>\n    </div>\n  `\n})\nexport class ChatbotFormComponent {\n  chatbot = {\n    message: '',\n    response: '',\n  };\n\n  constructor(private chatbotApi: ChatbotApiService, private router: Router) {\n    // inputEnterListener();\n   }\n\n  updateMessage(event: any) {\n    this.chatbot.message = event.target.value;\n  }\n\n  updateResponse(event: any) {\n    this.chatbot.response = event.target.value;\n  }\n\n  saveChatbot() {\n    this.chatbotApi\n      .saveChatbot(this.chatbot)\n      .subscribe(\n        () => this.router.navigate(['/']),\n        error => alert(error.message)\n      );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}